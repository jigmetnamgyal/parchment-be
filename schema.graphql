enum InstitutionEnum {
  college
  school
}

enum KycStatusEnum {
  approved
  in_progress
  rejected
}

type Mutation {
  sendForKyc(
    """
    Parameters for SendForKyc
    """
    input: SendForKycInput!
  ): SendForKycPayload
}

type Profile {
  documentUrl: String!
  emailAddress: String!
  firstName: String!
  id: ID!
  institutionName: String!
  institutionType: InstitutionEnum!
  kycStatus: KycStatusEnum!
  lastName: String!
  user: User!
}

type Query {
  profile(id: ID!): Profile
  profiles: [Profile!]
}

input SendForKycAttributes {
  documentUrl: String!
  emailAddress: String!
  firstName: String!
  institutionName: String!
  institutionType: String!
  lastName: String!
}

"""
Autogenerated input type of SendForKyc
"""
input SendForKycInput {
  attributes: SendForKycAttributes!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of SendForKyc
"""
type SendForKycPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  profile: Profile
}

type User {
  id: ID!
  walletAddress: String!
}
